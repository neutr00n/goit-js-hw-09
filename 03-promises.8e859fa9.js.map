{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAUC,SAASC,cAAc,SAIvC,IAAIC,EAAW,GAmDf,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,uBAAqBH,QAAiBC,OAE5CG,EAAK,sBAAoBJ,QAAeC,MAAU,GAErDA,EAAM,G,CA1DbN,EAAQa,iBAAiB,UAKzB,SAA0BC,GACxBA,EAAEC,iBAiCJ,UAA6BT,MAAEA,EAAKU,KAAEA,EAAIC,OAAEA,GAAW,IACrD,IAAIC,EAAWC,OAAOb,GACtB,IAAK,IAAIc,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAChChB,EAAcgB,EAAGF,GACdG,MAAKC,GAASxB,EAAAyB,OAAOC,QAAQF,KAC7BG,OAAMC,GAAS5B,EAAAyB,OAAOI,QAAQD,KACjCR,GAAYC,OAAOH,E,CArCrBY,CAAoBzB,GAEpB0B,aAAaC,WAdY,gBAezBhB,EAAEiB,OAAOC,QAET7B,EAAW,E,IAZbH,EAAQa,iBAAiB,UAezB,SAA0BC,GACxBX,EAASW,EAAEiB,OAAOE,MAAQnB,EAAEiB,OAAOT,MAAMY,OAEzC,MAAMC,EAAoBC,KAAKC,UAAUlC,GACzC0B,aAAaS,QAxBY,eAwBgBH,E,IAG3C,WACE,MAAMI,EAAeV,aAAaW,QA5BT,gBA8BzB,GAAID,EACF,IACEpC,EAAWiC,KAAKK,MAAMF,GAEtBG,OAAOC,QAAQxC,GAAUyC,SACvB,EAAEX,EAAMX,KAAYtB,EAAQ6C,SAASZ,GAAMX,MAAQA,G,CAErD,MAAOI,GACPoB,QAAQC,IAAIrB,EAAMsB,Q,EA/BxBC","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst formRef = document.querySelector('.form');\n\nconst FORM_CURRENT_VALUE = 'form-storage';\n\nlet formData = {};\n\nformRef.addEventListener('submit', handleSubmitForm);\nformRef.addEventListener('change', handleInputValue);\n\ngetFormDataFromStorage();\n\nfunction handleSubmitForm(e) {\n  e.preventDefault();\n\n  startCreatePromises(formData);\n\n  localStorage.removeItem(FORM_CURRENT_VALUE);\n  e.target.reset();\n\n  formData = {};\n}\n\nfunction handleInputValue(e) {\n  formData[e.target.name] = e.target.value.trim();\n\n  const stringifyFormData = JSON.stringify(formData);\n  localStorage.setItem(FORM_CURRENT_VALUE, stringifyFormData);\n}\n\nfunction getFormDataFromStorage() {\n  const savedMessage = localStorage.getItem(FORM_CURRENT_VALUE);\n\n  if (savedMessage) {\n    try {\n      formData = JSON.parse(savedMessage);\n\n      Object.entries(formData).forEach(\n        ([name, value]) => (formRef.elements[name].value = value)\n      );\n    } catch (error) {\n      console.log(error.message);\n    }\n  }\n}\n\nfunction startCreatePromises({ delay, step, amount } = {}) {\n  let stepTime = Number(delay);\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, stepTime)\n      .then(value => Notify.success(value))\n      .catch(error => Notify.failure(error));\n    stepTime += Number(step);\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$formRef","document","querySelector","$47d4ff9957288465$var$formData","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","step","amount","stepTime","Number","i","then","value","Notify","success","catch","error","failure","$47d4ff9957288465$var$startCreatePromises","localStorage","removeItem","target","reset","name","trim","stringifyFormData","JSON","stringify","setItem","savedMessage","getItem","parse","Object","entries","forEach","elements","console","log","message","$47d4ff9957288465$var$getFormDataFromStorage"],"version":3,"file":"03-promises.8e859fa9.js.map"}